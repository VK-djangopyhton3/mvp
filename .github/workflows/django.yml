name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_SSH_KEY  }}
          HOSTNAME : ${{ secrets.REMOTE_HOST  }}
          USER_NAME : ${{ secrets.REMOTE_USER  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}
          
            #Now we have got the access of EC2 and we will start the deploy .
            cd /var/www/mvp &&
            git checkout master &&
            git pull origin master &&

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      #     instance-ids: ${{ secrets.INSTANCE_ID }}

      # - name: Create CodeDeploy Deployment
      #   id: deploy
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name DemoDeploy \
      #       --deployment-group-name DevOpsStaging \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --github-location repository=${{ github.repository }},commitId=${{ github.sha }}


      # - name: AWS SSM Send-Command
      #   uses: peterkimzz/aws-ssm-send-command@master
      #   id: ssm
      #   with:
      #     aws-region: ${{ secrets.AWS_REGION }}
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}